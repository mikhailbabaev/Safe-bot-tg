import asyncio
import random
import os
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery, FSInputFile

from keyboards import start_menu, FAQ, payments
from templates import SECURITY_STEPS ,get_random_result, progress_bar, WELCOME_MESSAGE, FAQ_TEXT, PAYMENT_TEXT


router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):

    await message.answer(WELCOME_MESSAGE, reply_markup=start_menu)


async def animated_typing(callback, message):
    """–ú–∏–≥–∞—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç '...' –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏"""
    for _ in range(3):
        for dots in [".", "..", "...", ""]:
            await message.edit_text(f"‚è≥ –ò–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏{dots}")
            await asyncio.sleep(0.5)


async def animated_typing(callback, message):
    """–ú–∏–≥–∞—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç '...' –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    for _ in range(3):
        for dots in [".", "..", "...", ""]:
            await message.edit_text(f"‚è≥ –ò–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏{dots}")
            await asyncio.sleep(0.5)


@router.callback_query(F.data == "check_security")
async def check_security(callback: CallbackQuery):
    """–ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å –∫—Ä–∞—Å–∏–≤—ã–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º"""

    # # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    # message = await callback.message.answer("‚è≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏...")
    # await callback.answer()
    #
    # # –ú–∏–≥–∞—é—â–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º
    # await animated_typing(callback, message)
    #
    # # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —ç—Ç–∞–ø–∞–º –ø—Ä–æ–≤–µ—Ä–∫–∏
    # for text, percent in SECURITY_STEPS:
    #     delay = random.uniform(1.5, 3)  # –†–∞–Ω–¥–æ–º–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –æ—Ç 1.5 –¥–æ 3 —Å–µ–∫
    #     await asyncio.sleep(delay)
    #     await message.edit_text(f"{text}...\n{progress_bar(percent)}")
    # await asyncio.sleep(2)
    # await message.edit_text(f"{get_random_result()} üîí")
    await callback.message.answer("üîß –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ó–∞–ø—É—Å—Ç–∏–º —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü.")
    await callback.answer(show_alert=False)


@router.callback_query(F.data == "FAQ")
async def show_faq(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ FAQ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π FAQ
    await callback.message.answer(
        FAQ_TEXT,  # –°—Å—ã–ª–∫–∞ —Å–∫—Ä—ã—Ç–∞ –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º
        reply_markup=FAQ,  # –≠—Ç–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        parse_mode="Markdown"  # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º Markdown
    )
    await callback.answer()


@router.callback_query(F.data == "go_to_start_menu")
async def return_to_main_menu(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º"""

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    await callback.message.answer(
        WELCOME_MESSAGE,
        reply_markup=start_menu  # –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    )
    await callback.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è


@router.callback_query(F.data == "payments")
async def payment_to_ukassa(callback: CallbackQuery):
    """–û–ø–ª–∞—Ç–∞ —Å–µ—Ä–≤–∏—Å–∞ —á–µ—Ä–µ–∑ –Æ–∫–∞—Å—Å—É"""

    # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
    # image_path = os.path.join(os.path.dirname(__file__), '../pay.jpg')
    # image_file = FSInputFile(image_path)
    # await callback.message.answer_photo(
    #     image_file,
    #     caption=PAYMENT_TEXT,
    #     reply_markup=payments,
    #     parse_mode='HTML'
    # )

    # –ó–∞–≥–ª—É—à–∫–∞
    await callback.message.answer("üí≥ –§—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ó–∞–ø—É—Å—Ç–∏–º —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü.")
    await callback.answer(show_alert=False)


@router.callback_query(F.data == "reference")
async def reference_info(callback: CallbackQuery):
    """–í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–≥–ª—É—à–∫–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤"""
    await callback.message.answer("üéü –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ó–∞–ø—É—Å—Ç–∏–º —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü.")
    await callback.answer(show_alert=False)